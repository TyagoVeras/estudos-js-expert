# EXAMPLE USAGE:
#
#   Refer for explanation to following link:
#   https://github.com/evilmartians/lefthook/blob/master/docs/configuration.md
#
pre-push:
  parallel: false
  commands:
    check-branch:
      run: |
        GREEN='\033[0;32m'
        RED='\033[0;31m'
        END_COLOR='\033[0m'
        ORANGE='\033[0;33m'

        # ObtÃ©m o nome da branch atual
        current_branch=$(git rev-parse --abbrev-ref HEAD)

        # Verifica se a branch atual estÃ¡ na whitelist
        SWHITELIST_BRANCHES=("release" "master" "main")
        if [[ " ${SWHITELIST_BRANCHES[@]} " =~ " ${current_branch} " ]]; then
          echo "${RED} â›” VocÃª nÃ£o pode fazer push para a branch $current_branch${END_COLOR}"
          exit 1
        fi

    update-develop:
      run: |
        GREEN='\033[0;32m'
        RED='\033[0;31m'
        END_COLOR='\033[0m'
        ORANGE='\033[0;33m'

        # Atualiza a branch develop local
        echo "${GREEN} ðŸ‘€ Fazendo checkout na branch develop${END_COLOR}"
        CHECKOUT_MSG=$(git checkout develop 2>&1)
        echo "${ORANGE} ðŸ”„ Run git checkout develop: $CHECKOUT_MSG ${END_COLOR}"
        if [ $? -ne 0 ]; then
          echo "${RED} â›” NÃ£o foi possÃ­vel fazer o checkout na branch develop${END_COLOR}"
          exit 1
        else
          echo "${GREEN} âœ… Checkout na branch develop feito com sucesso${END_COLOR}"
        fi

        CHECKOUT_MSG=$(git pull origin develop 2>&1)
        echo "${ORANGE} ðŸ”„ Run git pull origin develop: $CHECKOUT_MSG ${END_COLOR}"
        if [ $? -ne 0 ]; then
          echo "${RED} â›” NÃ£o foi possÃ­vel atualizar a branch develop${END_COLOR}"
          exit 1
        elif [[ $CHECKOUT_MSG == *"Already up"* ]]; then
          echo "${RED} ðŸš¨ A branch local de develop jÃ¡ estÃ¡ atualizada${END_COLOR}"
        else
          echo "${GREEN} âœ… AtualizaÃ§Ã£o da branch develop feita com sucesso${END_COLOR}"
        fi

    merge-develop:
      run: |
        GREEN='\033[0;32m'
        RED='\033[0;31m'
        END_COLOR='\033[0m'
        ORANGE='\033[0;33m'

        # Volta para a branch atual e faz o merge
        echo "${GREEN} ðŸ‘€ Voltando para a branch atual${END_COLOR}"
        CHECKOUT_MSG=$(git checkout $current_branch 2>&1)
        echo "${ORANGE} ðŸ”„ Run git checkout $current_branch: $CHECKOUT_MSG ${END_COLOR}"
        if [ $? -ne 0 ]; then
          echo "${RED} â›” NÃ£o foi possÃ­vel voltar para a branch atual${END_COLOR}"
          exit 1
        else
          echo "${GREEN} âœ… Checkout na branch atual feito com sucesso${END_COLOR}"
        fi

        echo "${GREEN} ðŸ‘€ Fazendo merge da branch develop com a branch atual${END_COLOR}"
        CHECKOUT_MSG=$(git merge --no-ff --no-edit develop 2>&1)
        echo "${ORANGE} ðŸ”„ Run git merge --no-ff --no-edit develop: $CHECKOUT_MSG ${END_COLOR}"
        if [ $? -ne 0 ]; then
          echo "${RED} â›” NÃ£o foi possÃ­vel fazer o merge com a branch atual${END_COLOR}"
          exit 1
        else
          echo "${GREEN} âœ… Merge com a branch atual feito com sucesso${END_COLOR}"
        fi


pre-commit:
  parallel: true
  commands:
    tsc:
      tags: ci
      run: echo "tsc"